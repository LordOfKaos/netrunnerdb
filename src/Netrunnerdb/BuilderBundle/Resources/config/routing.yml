deck_builder_index:
    pattern: /{_locale}
    methods: [GET]
    defaults:
        _controller: NetrunnerdbBuilderBundle:Social:index
        _locale: en
    requirements:
        _locale: en|fr|de|es|it|pl

deck_buildform:
    pattern:  /{_locale}/deck/new/{side_text}
    methods: [GET]
    defaults:
        _controller: NetrunnerdbBuilderBundle:Builder:buildform
        _locale: en
    requirements:
        _locale: en|fr|de|es|it|pl

deck_initbuild:
    pattern: /{_locale}/deck/build/{card_code}
    methods: [GET]
    defaults:
        _controller: NetrunnerdbBuilderBundle:Builder:initbuild
        _locale: en
    requirements:
        _locale: en|fr|de|es|it|pl

deck_save:
    pattern: /{_locale}/deck/save
    methods: [POST]
    defaults:
        _controller: NetrunnerdbBuilderBundle:Builder:save
        _locale: en
    requirements:
        _locale: en|fr|de|es|it|pl

deck_edit:
    pattern: /{_locale}/deck/edit/{deck_id}
    methods: [GET]
    defaults:
        _controller: NetrunnerdbBuilderBundle:Builder:edit
        _locale: en
    requirements:
        _locale: en|fr|de|es|it|pl
        deck_id: \d+

deck_view:
    pattern: /{_locale}/deck/view/{deck_id}
    methods: [GET]
    defaults:
        _controller: NetrunnerdbBuilderBundle:Builder:view
        _locale: en
    requirements:
        _locale: en|fr|de|es|it|pl
        deck_id: \d+

deck_duplicate:
    pattern: /{_locale}/deck/duplicate/{deck_id}
    methods: [GET]
    defaults:
        _controller: NetrunnerdbBuilderBundle:Builder:duplicate
        _locale: en
    requirements:
        _locale: en|fr|de|es|it|pl
        deck_id: \d+

decks_list:
    pattern: /{_locale}/decks
    methods: [GET]
    defaults:
        _controller: NetrunnerdbBuilderBundle:Builder:list
        _locale: en
    requirements:
        _locale: en|fr|de|es|it|pl

deck_publish:
    pattern: /deck/can_publish/{deck_id}
    methods: [GET]
    defaults:
        _controller: NetrunnerdbBuilderBundle:Social:publish
        deck_id: \d+

deck_delete:
    pattern: /{_locale}/deck/delete
    methods: [POST]
    defaults:
        _controller: NetrunnerdbBuilderBundle:Builder:delete
        _locale: en
    requirements:
        _locale: en|fr|de|es|it|pl

deck_delete_list:
    pattern: /{_locale}/deck/delete_list
    methods: [POST]
    defaults:
        _controller: NetrunnerdbBuilderBundle:Builder:deleteList
        _locale: en
    requirements:
        _locale: en|fr|de|es|it|pl

deck_import:
    pattern: /{_locale}/deck/import
    methods: [GET]
    defaults:
        _controller: NetrunnerdbBuilderBundle:Builder:import
        _locale: en
    requirements:
        _locale: en|fr|de|es|it|pl

deck_textimport:
    pattern: /{_locale}/deck/textimport
    methods: [POST]
    defaults:
        _controller: NetrunnerdbBuilderBundle:Builder:textimport
        _locale: en
    requirements:
        _locale: en|fr|de|es|it|pl

deck_fileimport:
    pattern: /{_locale}/deck/fileimport
    methods: [POST]
    defaults:
        _controller: NetrunnerdbBuilderBundle:Builder:fileimport
        _locale: en
    requirements:
        _locale: en|fr|de|es|it|pl

deck_meteorimport:
    pattern: /{_locale}/deck/meteorimport
    methods: [POST]
    defaults:
        _controller: NetrunnerdbBuilderBundle:Builder:meteorimport
        _locale: en
    requirements:
        _locale: en|fr|de|es|it|pl

deck_export_octgn:
    pattern: /deck/export/octgn/{deck_id}
    methods: [GET]
    defaults:
        _controller: NetrunnerdbBuilderBundle:Builder:octgnexport
    requirements:
        deck_id: \d+

deck_export_text:
    pattern: /deck/export/text/{deck_id}
    methods: [GET]
    defaults:
        _controller: NetrunnerdbBuilderBundle:Builder:textexport
    requirements:
        deck_id: \d+

deck_export_octgn_list:
    pattern: /deck/export/octgn/list
    methods: [GET]
    defaults:
        _controller: NetrunnerdbBuilderBundle:Builder:octgnexportList

deck_export_text_list:
    pattern: /deck/export/text/list
    methods: [GET]
    defaults:
        _controller: NetrunnerdbBuilderBundle:Builder:textexportList


deck_email:
    pattern: /deck/export/email/{deck_id}
    methods: [GET]
    defaults:
        _controller: NetrunnerdbBuilderBundle:Builder:email
        deck_id: \d+

deck_copy:
    pattern: /{_locale}/deck/copy/{decklist_id}
    methods: [POST]
    defaults:
        _controller: NetrunnerdbBuilderBundle:Builder:copy
        _locale: en
    requirements:
        _locale: en|fr|de|es|it|pl
        decklist_id: \d+

decklist_export_octgn:
    pattern: /decklist/export/octgn/{decklist_id}
    methods: [GET]
    defaults:
        _controller: NetrunnerdbBuilderBundle:Social:octgnexport
    requirements:
        decklist_id: \d+

decklist_export_text:
    pattern: /decklist/export/text/{decklist_id}
    methods: [GET]
    defaults:
        _controller: NetrunnerdbBuilderBundle:Social:textexport
    requirements:
        decklist_id: \d+

decklist_new:
    pattern: /{_locale}/deck/publish
    methods: [POST]
    defaults:
        _controller: NetrunnerdbBuilderBundle:Social:new
        _locale: en
    requirements:
        _locale: en|fr|de|es|it|pl
    

decklists_searchform:
    pattern: /{_locale}/decklists/search
    methods: [GET]
    defaults:
        _controller: NetrunnerdbBuilderBundle:Social:search
    requirements:
        _locale: en|fr|de|es|it|pl
    
decklists_list:
    pattern: /{_locale}/decklists/{type}/{page}
    methods: [GET]
    defaults:
        _controller: NetrunnerdbBuilderBundle:Social:list
        page: 1
        _locale: en
    requirements:
        _locale: en|fr|de|es|it|pl
        page: \d+

decklist_detail:
    pattern: /{_locale}/decklist/{decklist_id}/{decklist_name}
    methods: [GET]
    defaults:
        _controller: NetrunnerdbBuilderBundle:Social:view
        _locale: en
    requirements:
        _locale: en|fr|de|es|it|pl
        decklist_id: \d+

decklist_favorite:
    pattern: /user/favorite
    methods: [POST]
    defaults:
        _controller: NetrunnerdbBuilderBundle:Social:favorite

decklist_like:
    pattern: /user/like
    methods: [POST]
    defaults:
        _controller: NetrunnerdbBuilderBundle:Social:vote

decklist_comment:
    pattern: /user/comment
    methods: [POST]
    defaults:
        _controller: NetrunnerdbBuilderBundle:Social:comment

decklist_edit:
    pattern: /decklist/edit/{decklist_id}
    methods: [POST]
    defaults:
        _controller: NetrunnerdbBuilderBundle:Social:edit
    requirements:
        decklist_id: \d+

decklist_delete:
    pattern: /decklist/delete/{decklist_id}
    methods: [POST]
    defaults:
        _controller: NetrunnerdbBuilderBundle:Social:delete
    requirements:
        decklist_id: \d+

user_profile:
    pattern: /{_locale}/user/profile
    methods: [GET]
    defaults:
        _controller: NetrunnerdbUserBundle:Default:profile
    requirements:
        _locale: en|fr|de|es|it|pl

user_profile_save:
    pattern: /{_locale}/user/profile_save
    methods: [POST]
    defaults:
        _controller: NetrunnerdbUserBundle:Default:saveProfile
    requirements:
        _locale: en|fr|de|es|it|pl
    
user_profile_view:
    pattern: /{_locale}/profile/{user_id}/{user_name}/{page}
    methods: [GET]
    defaults:
        _controller: NetrunnerdbBuilderBundle:Social:profile
        page: 1
    requirements:
        _locale: en|fr|de|es|it|pl
        user_id: \d+
    
user_comments:
    pattern: /{_locale}/user/comments/{page}
    methods: [GET]
    defaults:
        _controller: NetrunnerdbBuilderBundle:Social:usercomments
        page: 1
    requirements:
        _locale: en|fr|de|es|it|pl

all_comments:
    pattern: /{_locale}/deckcomments/{page}
    methods: [GET]
    defaults:
        _controller: NetrunnerdbBuilderBundle:Social:comments
        page: 1
    requirements:
        _locale: en|fr|de|es|it|pl

donators:
    pattern: /{_locale}/donators
    methods: [GET]
    defaults:
        _controller: NetrunnerdbBuilderBundle:Social:donators
    requirements:
        _locale: en|fr|de|es|it|pl
        
        
tools_demo:
    pattern: /tools/demo
    methods: [GET]
    defaults:
        _controller: NetrunnerdbBuilderBundle:Tools:demo


api_decklist:
    pattern: /api/decklist/{decklist_id}.{_format}
    defaults:
        _controller: NetrunnerdbBuilderBundle:Api:decklist
        _format: json
    requirements:
        _format: json
        decklist_id: \d+

api_decklists:
    pattern: /api/decklists/by_date/{date}.{_format}
    defaults:
        _controller: NetrunnerdbBuilderBundle:Api:decklists
        _format: json
    requirements:
        _format: json
        date: \d\d\d\d-\d\d-\d\d

api_decks:
    pattern: /api/decks
    defaults:
        _controller: NetrunnerdbBuilderBundle:Api:decks
        
api_oauth2_decks:
    pattern: /api_oauth2/decks
    defaults:
        _controller: NetrunnerdbBuilderBundle:Api:decks
            
api_oauth2_save_deck:
    pattern: /api_oauth2/save_deck/{deck_id}
    defaults:
        _controller: NetrunnerdbBuilderBundle:Api:saveDeck
    requirements:
        deck_id: \d+

api_oauth2_publish_deck:
    pattern: /api_oauth2/publish_deck/{deck_id}
    defaults:
        _controller: NetrunnerdbBuilderBundle:Api:publish
    requirements:
        deck_id: \d+

tag_add:
    pattern: /tag/add
    methods: [POST]
    defaults:
        _controller: NetrunnerdbBuilderBundle:Tag:add

tag_remove:
    pattern: /tag/remove
    methods: [POST]
    defaults:
        _controller: NetrunnerdbBuilderBundle:Tag:remove

tag_clear:
    pattern: /tag/clear
    methods: [POST]
    defaults:
        _controller: NetrunnerdbBuilderBundle:Tag:clear

user_info:
    pattern: /user/info
    defaults: { _controller: NetrunnerdbUserBundle:Default:info }
    
